---
import {basics} from "@cv"
import {GitHubIcon} from "@/icons/GitHubIcon.js"
import {LinkedInIcon} from "@/icons/LinkedInIcon.js"

const { profiles} = basics

const SOCIAL_ICONS: Record<string,string> = {
    GitHub:GitHubIcon,
    LinkedIn:LinkedInIcon,
}

const profilesInfo = profiles.map(({ network, url }) => {
    const icon = SOCIAL_ICONS[network]

    return {
        id: network,
        section: 'Social',
        title: `Visit ${network}`,
        icon,
        url
    }
})

---
<footer class="no-print w-full bottom-0 rounded-xl hidden md:flex justify-center">
  <div class="min-w-[400px] px-2 py-1 justify-center bg-gray-800 text-white rounded-xl">
    Press <kbd id="commandKey"></kbd> + <kbd>K</kbd> to open command palette
  </div>
</footer>

<ninja-keys
data-info={JSON.stringify(profilesInfo)} 
hideBreadcrumbs></ninja-keys>

<script>
 import "ninja-keys";
 import {PrintIcon} from '@/icons/printIcon.js';
 import {MoonIcon} from '@/icons/MoonIcon.js';
 import {SunIcon} from '@/icons/SunIcon.js';

   interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
    handler?: () => void
  }

 const ninja = document.querySelector("ninja-keys");

 if(ninja != null){

    const commandKey = document.querySelector('#commandKey');
    const OSCommandKey = navigator?.userAgent?.includes('Mac') ? 'Cmd' : 'Ctrl';
    commandKey != null ? commandKey.textContent = OSCommandKey : null;

    const socialSection = ninja.getAttribute("data-info") ?? "[]"
    const parsedInfo = JSON.parse(socialSection)

    const data = parsedInfo.map(
      ({ url, icon, id, section, title }: Info) => {
        return {
          id,
          title,
          icon,
          hotkey: `${OSCommandKey}+${id[0].toUpperCase()}`,
          section,
          handler: () => {
            window.open(url, "_blank")
          },
        }
      }
    )


    const updateIcon = (themePreference: string) => {
      document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
        (element as HTMLElement).style.scale = element.id === themePreference ? "1" : "0";
      });
    };

    const toggleTheme = () => {
      const themePreference = localStorage.getItem("theme") ?? "system";
      const isDark =
        themePreference === "dark" ||
        (themePreference === "system" && window.matchMedia("(prefers-color-scheme: dark)").matches);

      document.documentElement.classList[isDark ? "add" : "remove"]("dark");
      ninja.classList[isDark ? "add" : "remove"]("dark");
      updateIcon(themePreference);
    };


    ninja.data = [
      {
        id: 'print',
        title: 'Print',
        hotkey: `${OSCommandKey}+P`,
        icon: PrintIcon,
        section: 'Actions',
        handler: () => {
            window.print();
        },
      },
           {
        id: "theme-light",
        title: "Switch to Light Theme",
        hotkey: `${OSCommandKey}+I`,
        section: "Actions",
        icon: SunIcon,
        handler: () => {
          localStorage.setItem("theme", "light");
          toggleTheme();
        },
      },
      {
        id: "theme-dark",
        title: "Switch to Dark Theme",
        hotkey: `${OSCommandKey}+O`,
        section: "Actions",
        icon: MoonIcon,
        handler: () => {
          localStorage.setItem("theme", "dark");
          toggleTheme();
        },
      },
      ...data
    ];
}



</script>

<style>

@media print{
    ninja-keys{
        display: none !important;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

footer{
    position: fixed;
    padding-block: 16px;
    text-align: center;

    view-timeline: --revealing;
    view-timeline-axis: block;

    animation: linear .4s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10% ;
}

kbd{
    background: #e5e5e5;
    color:#222;
    padding: 2px 4px;
    border-radius: 4px;
    font-size: 1em;
    font-weight: bold;
}

</style>